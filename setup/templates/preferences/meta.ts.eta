/* eslint-disable @typescript-eslint/quotes, max-len, quote-props, comma-dangle, eol-last */
<%
function stringify(o, indent=true) {
  return JSON.stringify(o, null, indent ? 2 : undefined)
}
%>

export type Preferences = {
<% for (const pref of it.preferences) { %>
  <%=pref.shortName %>: <%~ pref.valid %>

<% } %>
}
export type PreferenceName = keyof Preferences

export const defaults: Preferences = {
<% for (const pref of it.preferences) { %>
  <%= pref.shortName %>: <%~ stringify(pref.shortName === 'citekeyFormat' ? pref.default.replace('\u200b', '') : pref.default, false) %>,
<% } %>
}

export const affects: Partial<Record<PreferenceName, string[]>> = <%~ stringify(
  it
  .preferences
  .reduce((acc, p) => { if (p.affects && p.affects.length) acc[p.shortName] = p.affects; return acc}, {})
) %>

export const affectedBy: Record<string, PreferenceName[]> = <%~ stringify(
  it
  .preferences
  .reduce((acc, p) => {
    for (const tr of (p.affects || [])) {
      acc[tr] = acc[tr] || []
      acc[tr].push(p.shortName)
    }
    return acc
  }, { 'BetterBibTeX JSON': []})
) %>


export const options: Partial<Record<PreferenceName, Record<string, string>>> = <%~ stringify(
  it
  .preferences
  .reduce((acc, pref) => {
    if (pref.options) acc[pref.shortName] = [...pref.options.entries()].reduce((acc, [k, v]) => Object.assign(acc, {[k]: v}), {})
    return acc
  }, {})
) %>

<%
const ignoreOptions = ['worker', 'exportFileData', 'keepUpdated', 'Normalize']
const overrides = it.preferences.filter(pref => pref.override)

const autoExport = {
  preferences: Object.fromEntries(overrides.map(pref => [pref.shortName, pref.affects || []])),
  displayOptions: it.translators.reduce((acc, tr) => {
    if (typeof tr.displayOptions?.keepUpdated === 'boolean') {
      for (const option in (tr.displayOptions || {})) {
        if (!ignoreOptions.includes(option) && !acc.includes(option)) acc.push(option)
      }
    }
    return acc
  }, []),
}
%>

export const autoExport: { preferences: Partial<Record<PreferenceName, string[]>>, displayOptions: string[] } = <%~ stringify(autoExport) %>
