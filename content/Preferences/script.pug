script.
  function show() {
    const editing = document.getElementById('id-better-bibtex-preferences-citekeyFormatEditing')
    const label = document.getElementById('id-better-bibtex-label-citekeyFormatBackup')
    Zotero.debug('backup citekey pattern: ' + backup.value)
    backup.hidden = label.hidden = !backup.value || (citekey.value === backup.value)
  }
  const observer = {}
  window.addEventListener('load', function() {
    observer.citekey = Zotero.Prefs.registerObserver('translators.better-bibtex.citekeyFormat', showNew)
    showNew()
    observer.backup = Zotero.Prefs.registerObserver('translators.better-bibtex.citekeyFormatBackup', showBackup)
    showBackup()
  })
  window.addEventListener('unload', function() {
    if (observer.citekey) Zotero.Prefs.unregisterObserver(observer.citekey)
    if (observer.backup) Zotero.Prefs.unregisterObserver(observer.backup)
  })
  function showNew() {
    const citekey = document.getElementById('id-better-bibtex-preferences-citekeyFormat')
    const converted = document.getElementById('id-better-bibtex-preferences-citekeyFormatNew')
    const label = document.getElementById('id-better-bibtex-label-citekeyFormatNew')

    converted.value = ''
    if (citekey.value) {
      try {
        if (citekey.value.startsWith('[')) {
          converted.value = Zotero.BetterBibTeX.KeyManager.convertLegacy(citekey.value)
        }
      }
      catch (err) {
        Zotero.debug('could not convert citekey pattern: ' + err.message)
        converted.value = ''
      }
    }
    converted.hidden = label.hidden = !converted.value
    Zotero.debug('converted citekey pattern: ' + converted.value)
    showBackup()
  }

  Zotero.debug('BBT: loaded PrefPane')
  Zotero.BetterBibTeX.PrefPane.globals = Zotero.BetterBibTeX.PrefPane.autoexport.globals = Function('return this')();
  async function load() {
    try {
      Zotero.debug('BBT: loading PrefPane')
      await Zotero.BetterBibTeX.PrefPane.load()
      showNew()
      showBackup()
      Zotero.debug('BBT: PrefPane loaded')
    } catch (err) {
      Zotero.debug(`BBT: loading PrefPane error: ${err.message}\n${err.stack ||''}`)
    }
  }
